apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-noarg"

repositories {
    mavenLocal()
    maven { url 'https://nexus.xzcysoft.com/repository/maven-public/' }
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://jitpack.io/" }
}

dependencies {

    // Kotlin编译插件
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-kotlin
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}")

    // 依赖基础工程
    compile project(':searched-base')

    // JSON序列化
    compile("com.alibaba:fastjson:$fastjsonVersion")

    // swagger文档管理
//    compile("com.spring4all:swagger-spring-boot-starter:$swaggerSpringBootStarterVersion")

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'

    // Web组件
    compile("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    //http工具类
    compile("org.apache.httpcomponents:httpclient:4.5.5")
    // 系统端点
    compile("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")

    // Redis组件
    compile("org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion")

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile("org.apache.commons:commons-lang3:$commonsLang3Version")

    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.2'

    // 短信依赖
    compile group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '3.7.1'
    compile group: 'com.aliyun', name: 'aliyun-java-sdk-dysmsapi', version: '1.1.0'

    // 微信支付SDK
    compile('com.github.wxpay:WXPay-SDK-Java:0.0.4')

    // 支付宝SDK
    // https://mvnrepository.com/artifact/com.alipay.sdk/alipay-sdk-java
    compile group: 'com.alipay.sdk', name: 'alipay-sdk-java', version: '3.0.0'

    // 二维码组件
    // https://mvnrepository.com/artifact/com.google.zxing/core
    compile group: 'com.google.zxing', name: 'core', version: '3.3.2'

    // https://mvnrepository.com/artifact/net.coobird/thumbnailator
    compile group: 'net.coobird', name: 'thumbnailator', version: '0.4.8'

    // 日志
    compile "io.github.microutils:kotlin-logging:${kotlinLoggingVersion}"

    // 业务模型校验
    // https://mvnrepository.com/artifact/com.baidu.unbiz/fluent-validator
    compile('com.baidu.unbiz:fluent-validator:1.0.9') {
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }

    // JDK10 支持
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0'
    // https://mvnrepository.com/artifact/javax.activation/activation
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'

    //腾讯云短信
    compile group: 'com.github.qcloudsms', name: 'qcloudsms',version: '1.0.2'
    // 正式打包时，请移除该注释
//	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

    // 测试组件
    testCompile("org.springframework.boot:spring-boot-starter-test:$springBootVersion")

    testCompile group: 'junit', name: 'junit', version: '4.11'

}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

// 指定工程编码格式
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}