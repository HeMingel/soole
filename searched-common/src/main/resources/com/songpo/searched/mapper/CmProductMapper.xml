<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.songpo.searched.mapper.CmProductMapper">

    <!-- 查询商品,模式 活动 分类 名称 ; 智能排序以及各种排序 -->

    <select id="selectBySalesMode" resultType="map">
        SELECT
          p.name,
          p.image_url,
          p.comment_num,
          p.sales_volume,
          p.`sales_mode_id`,
          p.`introduction`,
          pt.name product_type_name,
          p.sales_virtual,
          ap.*
        FROM
          sl_product p
          LEFT JOIN sl_activity_product ap
            ON p.id = ap.`product_id`
          LEFT JOIN sl_shop s
            ON p.`shop_id` = s.`id`
          LEFT JOIN sl_product_type pt
            ON p.product_type_id = pt.id
            <where>
                p.sold_out = 1
                and ap.enabled = 1
                <if test="name != '' and name != null ">
                    <bind name="pName" value="'%' + name + '%'"/>
                    AND p.name LIKE #{pName}
                </if>
                <if test="salesModeId != '' and salesModeId != null">
                    AND p.sales_mode_id = #{salesModeId}
                </if>
                <if test="activityId != '' and activityId != null ">
                    and ap.activity_id = #{activityId}
                </if>
                <if test="goodsTypeId !='' and goodsTypeId != null and goodsTypeStatus ==2 ">
                    and p.product_type_id = #{goodsTypeId}
                </if>
                <if test="goodsTypeId !='' and goodsTypeId != null and goodsTypeStatus ==1 ">
                    and pt.parent_id = #{goodsTypeId}
                </if>

                <!-- 如果经纬度不为空，则选择经纬度加指定值范围内的店铺 -->
                <if test="null != longitudeMin and null != longitudeMax and null != latitudeMin and null != latitudeMax">
                    AND s.longitude BETWEEN #{longitudeMin} - 10 AND #{longitudeMax}
                    AND s.latitude BETWEEN #{latitudeMin} - 10 AND #{latitudeMax}
                </if>
                <!-- 如果价格区间最小值不为空，最大值为空，则选择商品价格大于或等于价格区间最小值 -->
                <if test="null != priceMin and null == priceMax">
                    AND ap.price &gt;= #{priceMin}
                </if>
                <!-- 如果价格区间最大值不为空，最小值为空，则选择商品价格小于或等于价格区间最大值 -->
                <if test="null == priceMin and null != priceMax">
                    AND ap.price &lt;= #{priceMax}
                </if>
                <!-- 如果价格区间最小值不为空，最大值不为空，则选择商品价格大于价格区间最小值和小于价格区间最大值 -->
                <if test="null != priceMin and null != priceMax">
                    AND ap.price BETWEEN #{priceMin} AND #{priceMax}
                </if>
                <if test="addressNow!=''and addressNow !=null">
                    <bind name="pAddress" value="'%' + addressNow + '%'"/>
                    AND s.address like #{pAddress}
                </if>
            </where>
        <!-- 动态拼接排序规则，自动取出多余的逗号 -->
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="sortByPrice != ''">
                ap.price ${sortByPrice},
            </if>
            <if test="sortByRating != ''">
                s.rating ${sortByRating},
            </if>
            <if test="sortBySale != ''">
                p.sales_volume ${sortBySale},
            </if>
            <if test="synthesize != '' and synthesize != null">
                (p.sales_volume + p.comment_num) DESC,
            </if>
            <if test="addressNow!=''and addressNow !=null  ">
                <bind name="pAddress" value="'%' + addressNow + '%'"/>
                s.address like #{pAddress},s.longitude ASC ,s.latitude ASC , p.comment_num DESC ,p.sales_volume DESC
            </if>

        </trim>
    </select>
    <!--77行涉及到排序 经纬度-->
    <!--<if test="addressNow!=''and addressNow !=null and longitudeNow !=null and longitudeNow != '' and latitudeNow != '' and latitudeNow != null ">-->
    <!--<if test="addressNow!=''and addressNow !=null and longitudeNow !=null and longitudeNow != '' and latitudeNow != '' and latitudeNow != null ">-->


    <!-- 根据活动唯一标识符查询商品 -->
    <select id="selectByAction" resultType="com.songpo.searched.entity.SlProduct">
        SELECT
        *
        FROM sl_product p
        LEFT JOIN sl_activity_product ap
        ON ap.product_id = p.id
        WHERE ap.action_id = #{actionId}
    </select>



    <!--根据分类查询商品 + 商品的筛选 + 根据名称查询-->
    <select id="screenGoods" resultType="Map">
        SELECT
        ap.*,p.name,p.introduction,p.comment_num,p.sales_volume,p.image_url,p.id as goods_id,p.sales_virtual,
        FROM
        sl_product p
        LEFT JOIN sl_activity_product ap
        ON p.id = ap.product_id
        WHERE 1=1
        and p.`sold_out`=1 AND ap.enabled = 1 and ap.activity_id = #{activityId}
        <if test="saleMode != null and saleMode != ''">
        and p.sales_mode_id = #{saleMode}
    </if>
    <if test="saleMode == null and saleMode == ''">
        and p.sales_mode_id = 6
    </if>
    <if test="goodsName != null and goodsName != ''">
        and p.`name` like "%"#{goodsName}"%"
    </if>
    <if test="goodsTypeId != null and goodsTypeId !=''">
        AND p.product_type_id = #{goodsTypeId}
    </if>
    <if test="screenGoods == null and screenGoods ==''">
        ORDER BY (p.sales_volume + p.comment_num) DESC
    </if>
    <if test="screenGoods != null and screenGoods !='' and screenGoods == 1">
        ORDER BY p.sales_volume DESC
    </if>
    <if test="screenGoods != null and screenGoods !='' and screenGoods == 2">
        ORDER BY p.sales_volume ASC
    </if>
    <if test="screenGoods != null and screenGoods !='' and screenGoods == 3">
            ORDER BY ap.price DESC
        </if>
        <if test="screenGoods != null and screenGoods !='' and screenGoods == 4">
            ORDER BY ap.price ASC
        </if>

    </select>


    <!--查询拼团商品发起人的头像-->
    <select id="selectGroupAvatar" resultType="Map" parameterType="String">
        SELECT
            COUNT(*) AS already_group,
            od.group_people AS need_group,
            (COUNT(*) - od.group_people) AS shengyu_group,
            u.`id` AS user_id,
            u.avatar,
            o.serial_number
        FROM
          sl_order_detail od
          LEFT JOIN sl_order o
            ON od.order_id = o.id
          LEFT JOIN sl_user u
            ON u.id = o.user_id
        WHERE o.payment_state = '1'
          AND od.product_id = #{goodsId}
          and o.spell_group_status =1
        GROUP BY o.serial_number
        ORDER BY o.pay_time DESC
        LIMIT 3
    </select>

    <select id="selectCustomerService" parameterType="String" resultType="Map">

        SELECT
           u.`id`,u.`avatar`,u.`nick_name`,u.`username`
        FROM
          sl_shop s
          LEFT JOIN sl_user u
          ON s.`owner_id` = u.`id`
          WHERE s.`id` =#{shopId}
    </select>

    <!--根据商品名称查询商品-->
    <select id="selectByName" resultType="Map" parameterType="String">
        SELECT
          p.name,p.image_url,p.introduction,p.product_type_id,p.comment_num,p.sales_volume,p.shop_id,p.`sales_mode_id`,ap.*
        FROM
          sl_product p
          LEFT JOIN sl_activity_product ap
           ON p.id = ap.product_id
           WHERE p.`sold_out`=1
          AND ap.enabled = 1
          and p.name LIKE #{goodsName}

    </select>

    <!--搜索商品表基础信息-->
    <select id="goodsBaseInfo" parameterType="String" resultType="Map">
      SELECT
          p.`id` AS goodsId,p.`sales_mode_id`,ap.*,p.name,p.comment_num,p.sales_volume,p.introduction,p.remark,p.image_url,p.shop_id,
          p.postage postAge,ap.price as activityPrice,p.sales_virtual,
        FROM
          sl_product p
          LEFT JOIN sl_activity_product ap
            ON p.id = ap.product_id
             WHERE p.`id` =#{goodsId} and ap.activity_id = #{activityId}
             and p.`sold_out`=1
          AND ap.enabled = 1

    </select>
    <!--查询品活动中间表 sl_activity_product_repository-->
     <select id="goodsActivity" parameterType="String" resultType="Map">
          SELECT
            apr.*
          FROM sl_product p
          LEFT JOIN sl_activity_product ap
          ON p.`id` = ap.product_id
          LEFT JOIN sl_activity_product_repository apr
          ON ap.`activity_product_repository_serial_number` = apr.serial_number
          WHERE
           p.id = #{goodsId}
           AND ap.`activity_id` = #{activityId}
          and p.`sold_out`=1
          AND ap.enabled = 1
     </select>
    <!--搜索商品所有图片-->
    <select id="goodsImageUrl" resultType="Map" parameterType="String">
        SELECT
          image_url,type,width,height
        FROM
          sl_product_image
        WHERE product_id = #{goodsId}
    </select>
    <!--商品活动库存列表 restrict_count限购数量-->
    <select id="goodsActivityList" parameterType="String" resultType="Map">
        SELECT
          apr.*,

          ap.restrict_count
        FROM
          sl_product p
          LEFT JOIN sl_activity_product ap
            ON p.id = ap.product_id
            LEFT JOIN sl_activity_product_repository apr
            on ap.activity_product_repository_serial_number = apr.serial_number
            WHERE p.id= #{goodsId} AND ap.activity_id= #{activityId} and p.`sold_out`=1 AND ap.enabled = 1
    </select>
    <!--查询商品库存规格-->
    <select id="goodsRepository" resultType="Map" parameterType="String">
          SELECT
            pr.* ,p.postage,ap.id AS activity_product_id
          FROM
            sl_product_repository pr
            LEFT JOIN sl_activity_product_repository apr
              ON pr.id= apr.product_repository_id
              LEFT JOIN sl_activity_product ap
              ON apr.`serial_number` = ap.`activity_product_repository_serial_number`
              LEFT JOIN sl_product p
              ON ap.`product_id` = p.`id`
              WHERE pr.`id`  = #{repositoryId} and ap.activity_id =#{activityId}
    </select>

    <!-- 查询预售商品列表 -->
    <select id="selectByTeamwork" resultType="map">
        SELECT
        p.*,
        COUNT(od.`order_id`) AS orderCount
        FROM
        sl_product p
        LEFT JOIN sl_product_repository pr
        ON pr.product_id = p.id
        LEFT JOIN sl_order_detail od
        ON od.`product_id` = p.`id`
        WHERE p.sales_mode_id = 1
        LIMIT 20
    </select>

    <!-- 查询预售商品列表 -->
    <select id="selectByPreSales" resultType="map">
        SELECT
        p.*,
        COUNT(od.`order_id`) AS orderCount
        FROM
        sl_product p
        LEFT JOIN sl_product_repository pr
        ON pr.product_id = p.id
        LEFT JOIN sl_order_detail od
        ON od.`product_id` = p.`id`
        WHERE p.sales_mode_id = 2
        LIMIT 20
    </select>
    <!--查询该未完成拼单的单子-->
    <select id="findGroupOrder" resultType="Map">
        SELECT  od.id AS orderDetailId,od.serial_number,COUNT(od.serial_number) AS orderNum
        FROM
          sl_order_detail od
        WHERE product_id = #{goodsId}
        GROUP BY od.serial_number HAVING COUNT(od.serial_number) &lt; #{peopleNum}
    </select>
        <!--查询该订单第一个发起人-->
    <select id="findGroupPeople" resultType="Map" parameterType="String">
        SELECT
         u.avatar,u.nick_name
        FROM sl_user u
        where u.id = #{userId}

    </select>
    <!--搜索拼团订单-->
    <select id="selectGroupOrder" parameterType="String" resultType="Map">

        SELECT
          COUNT(od.serial_number) AS already_people,
          od.group_people AS need_people,
          od.`serial_number` AS order_num,
          o.`group_master`
        FROM
          sl_order_detail od
          LEFT JOIN sl_order o
            ON od.`order_id` = o.`id`
            LEFT JOIN sl_activity_product ap
            ON od.`activity_product_id` = ap.`id`
        WHERE ap.`activity_id` =  #{activityId}
          AND od.`product_id` = #{goodsId}
          AND o.payment_state = 1
          AND o.spell_group_status = 1
        GROUP BY o.serial_number

    </select>

    <!--查询该活动商品购买成功的订单-->
    <select id="alreadyOrder" resultType="Map" parameterType="string">
        SELECT
          od.product_name,
          od.`price`,
          od.deduct_total_silver AS peas,
          od.`created_at`,
          o.`user_id`
        FROM
          sl_order o
          LEFT JOIN sl_order_detail od
            ON od.`serial_number` = o.`serial_number`
          LEFT JOIN sl_activity_product ap
            ON od.`activity_product_id` = ap.`id`
        WHERE
          ap.`activity_id` = #{activityId}
          AND od.`product_id` = #{goodsId}
          AND o.payment_state = 1
          AND o.spell_group_status = 1


    </select>
    <!--后台推荐商品-->
    <select id="backStageGoods" resultType="Map" parameterType="String">
        SELECT
          ap.*
        FROM
          sl_product p
          LEFT JOIN sl_activity_product ap
            ON p.id = ap.product_id
            WHERE p.id=#{goodsId}
            and ap.activity_id=#{activityId}
            and p.recommend = 1
            and p.`sold_out`=1
             AND ap.enabled = 1
            limit 0,4
    </select>
    <!--查询商品分类-->
    <select id="systemGoodsType" resultType="Map" parameterType="String">
        SELECT
          p.`product_type_id`
        FROM sl_product p
        WHERE  p.`id`= #{goodsId}
    </select>
    <!--系统推荐商品-->
    <select id="systemGoods" parameterType="String" resultType="HashMap">
        SELECT
        p.id as productId,
        p.`sales_mode_id`,
        p.name,
        p.comment_num,
        p.sales_volume,
        p.introduction,
        p.remark,
        p.image_url,
        ap.*
        FROM
          sl_product p
          LEFT JOIN sl_activity_product ap
            ON p.id = ap.product_id
            where p.product_type_id = #{goodsType}
            and ap.activity_id=#{activityId}
            and p.`sold_out`=1
             AND ap.enabled = 1
            ORDER BY p.sales_volume DESC
            limit 0,4

    </select>
    <!--店铺商品查询排序-->
    <select id="selectShopGoods" resultType="Map">
        SELECT
        p.id as goods_id,
        p.sales_mode_id,
        p.name,
        p.comment_num,
        p.sales_volume,
        p.introduction,
        p.remark,
        p.image_url,
        ap.*
        FROM
          sl_product p
          LEFT JOIN sl_activity_product ap
            ON p.id = ap.`product_id`
        WHERE p.`shop_id` = #{shopId}
          AND p.`sold_out` = 1
          AND ap.`enabled` = 1
        <if test="goodsName != null and goodsName !='' ">
            <bind name="pGoodsName" value="'%' + goodsName + '%'"/>
            and p.name like #{pGoodsName}
        </if>
        <!-- 动态拼接排序规则，自动取出多余的逗号 -->
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="sortByPrice != ''">
                ap.price ${sortByPrice},
            </if>
            <if test="sortBySale != ''">
                p.sales_volume ${sortBySale},
            </if>
            <if test="sortByPrice == '' and sortBySale == ''">
                p.sales_volume + p.comment_num
            </if>
        </trim>
    </select>
</mapper>

















