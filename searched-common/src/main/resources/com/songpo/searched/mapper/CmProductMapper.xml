<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.songpo.searched.mapper.CmProductMapper">

    <resultMap id="RecommendResultMap" type="com.songpo.searched.domain.CmProduct">
        <id column="productId" jdbcType="VARCHAR" property="productId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="image_url" jdbcType="VARCHAR" property="imageUrl"/>
    </resultMap>


    <!-- 根据销售模式查询商品 -->
    <select id="selectBySalesMode" resultType="map">
        SELECT
        p.id,
        p.name,
        p.reference_price AS price,
        p.image_url AS imageUrl
        <if test="salesModeId != ''">
            , psmoc.count
        </if>
        FROM sl_product p
        LEFT JOIN sl_product_repository pr ON pr.product_id = p.id
        LEFT JOIN sl_shop s ON s.id = p.shop_id
        <if test="salesModeId != ''">
            LEFT JOIN sl_product_sale_mode_order_count psmoc ON psmoc.product_id = p.id
        </if>
        <where>
            <if test="name != ''">
                <bind name="pName" value="'%' + name + '%'"/>
                AND p.name LIKE #{pName}
            </if>
            <if test="salesModeId != ''">
                AND psmoc.sales_mode_id = #{salesModeId}
            </if>
            <!-- 如果经纬度不为空，则选择经纬度加指定值范围内的店铺 -->
            <if test="null != longitudeMin and null != longitudeMax and null != latitudeMin and null != latitudeMax">
                AND s.longitude BETWEEN #{longitudeMin} - 10 AND #{longitudeMax}
                AND s.latitude BETWEEN #{latitudeMin} - 10 AND #{latitudeMax}
            </if>
            <!-- 如果价格区间最小值不为空，最大值为空，则选择商品价格大于或等于价格区间最小值 -->
            <if test="null != priceMin and null == priceMax">
                AND p.reference_price &gt;= #{priceMin}
            </if>
            <!-- 如果价格区间最大值不为空，最小值为空，则选择商品价格小于或等于价格区间最大值 -->
            <if test="null == priceMin and null != priceMax">
                AND p.reference_price &lt;= #{priceMax}
            </if>
            <!-- 如果价格区间最小值不为空，最大值不为空，则选择商品价格大于价格区间最小值和小于价格区间最大值 -->
            <if test="null != priceMin and null != priceMax">
                AND p.reference_price BETWEEN #{priceMin} AND #{priceMax}
            </if>
        </where>
        <!-- 动态拼接排序规则，自动取出多余的逗号 -->
        <trim prefix="ORDER BY" suffixOverrides=",">
            <if test="sortByPrice != ''">
                p.reference_price ${sortByPrice},
            </if>
            <if test="sortByRating != ''">
                s.rating ${sortByRating},
            </if>
        </trim>
    </select>

    <!-- 根据活动唯一标识符查询商品 -->
    <select id="selectByAction" resultType="slProduct">
        SELECT *
        FROM sl_product p LEFT JOIN sl_activity_product ap ON ap.product_id = p.id
        WHERE ap.action_id = #{actionId}
    </select>

    <!--查询商品前六个 推荐-->
    <select id="findRecommendProduct" resultMap="RecommendResultMap" >
        select id as productId,image_url,name from sl_product limit 0,
    </select>

    <!--根据分类查询商品 + 商品的筛选 + 根据名称查询-->
    <select id="screenGoods" resultType="Map">
        select
        *
        FROM sl_product p
        WHERE 1=1
        <if test="saleMode != null and saleMode != ''">
        and p.sales_mode_id = #{saleMode}
    </if>
    <if test="saleMode == null and saleMode == ''">
        and p.sales_mode_id = 0
    </if>
    <if test="goodsName != null and goodsName != ''">
        and p.`name` like "%"#{goodsName}"%"
    </if>
    <if test="goodsType != null and goodsType !=''">
        AND p.product_type_id = #{goodsType}
    </if>
    <if test="screenType == null and screenType ==''">
        ORDER BY (p.sales_volume + p.comment_num) DESC
    </if>
    <if test="screenType != null and screenType !='' and screenType == 1">
        ORDER BY p.sales_volume DESC
    </if>
    <if test="screenType != null and screenType !='' and screenType == 2">
        ORDER BY p.sales_volume ASC
    </if>
    <if test="screenType != null and screenType !='' and screenType == 3">
            ORDER BY p.reference_price DESC
        </if>
        <if test="screenType != null and screenType !='' and screenType == 4">
            ORDER BY p.reference_price ASC
        </if>


    </select>
    <!--搜索商品表基础信息-->
    <select id="goodsBaseInfo" parameterType="String" resultType="Map">
        SELECT
        id as productId,
        name,
        introduction,
        comment_num,
        sales_volume,
        reference_price,
        reference_pulse,
        sales_mode_id
          FROM
            sl_product
        where id= #{goodsId}
    </select>
    <!--搜索商品所有图片-->
    <select id="goodsImageUrl" resultType="Map" parameterType="String">
        SELECT
          image_url,type
        FROM
          sl_product_image
        WHERE product_id = #{goodsId}
    </select>
    <!--搜索商品规格detail-->
    <select id="goodsSpecificationDetail" parameterType="String" resultType="Map">
        SELECT
          sd.*
        FROM
          sl_product p
          LEFT JOIN sl_specification_detail_group sdg
          ON p.`id`=sdg.`product_id`
          LEFT JOIN sl_specification_detail sd
          ON sdg.`specification_detail_id` = sd.`id`
          WHERE p.`id`= #{goodsId}
          GROUP BY sd.name
    </select>
    <!--查询商品规格-->
    <select id="goodsSpecification" resultType="Map" parameterType="String">
        SELECT
          s.id AS specification_id,s.name
        FROM
          sl_product p
          LEFT JOIN sl_specification_detail_group sdg
          ON p.`id`=sdg.`product_id`
          LEFT JOIN sl_specification_detail sd
          ON sdg.`specification_detail_id` = sd.`id`
          LEFT JOIN sl_specification s
          ON sd.specification_id = s.id
          WHERE p.`id` = #{goodsId}
          GROUP BY sd.specification_id
    </select>
    <!--查询商品库存-->
    <select id="goodsRepository" resultType="Map" parameterType="String">
        SELECT
          p.`sale_type`,pr.*
        FROM
          sl_product p
          LEFT JOIN sl_product_repository pr
          ON p.`id` = pr.`product_id`
          WHERE p.`id` = #{goodsId}
    </select>
    <!--查询商品库存规格-->
    <select id="goodsRepositorySpecification" parameterType="String" resultType="Map">
        SELECT
          sd.`id` AS specification_detail_id,sd.`name`
        FROM
          sl_product_repository pr
          LEFT JOIN sl_specification_detail_group sdg
            ON sdg.`serial_number` = pr.`product_detail_group_serial_number`
            LEFT JOIN sl_specification_detail sd
            ON sdg.`specification_detail_id` = sd.`id`
            WHERE pr.`product_detail_group_serial_number` = #{product_detail_group_serial_number}
    </select>

    <!-- 查询预售商品列表 -->
    <select id="selectByTeamwork" resultType="map">
        SELECT
        p.*,
        COUNT(od.`order_id`) AS orderCount
        FROM
        sl_product p
        LEFT JOIN sl_product_repository pr
        ON pr.product_id = p.id
        LEFT JOIN sl_sales_mode sm
        ON pr.sales_mode_id = sm.id
        LEFT JOIN sl_system_config sc
        ON sc.content = sm.id
        LEFT JOIN sl_order_detail od
        ON od.`product_id` = p.`id`
        WHERE sc.name = 'SALES_MODE_TEAMWORK'
        LIMIT 20
    </select>

    <!-- 查询预售商品列表 -->
    <select id="selectByPreSales" resultType="map">
        SELECT
        p.*,
        COUNT(od.`order_id`) AS orderCount
        FROM
        sl_product p
        LEFT JOIN sl_product_repository pr
        ON pr.product_id = p.id
        LEFT JOIN sl_sales_mode sm
        ON pr.sales_mode_id = sm.id
        LEFT JOIN sl_system_config sc
        ON sc.content = sm.id
        LEFT JOIN sl_order_detail od
        ON od.`product_id` = p.`id`
        WHERE sc.name = 'SALES_MODE_PRE_SALES'
        LIMIT 20
    </select>
    <!--查询该未完成拼单的单子-->
    <select id="findGroupOrder" resultType="Map">
        SELECT  od.id AS orderDetailId,od.serial_number,COUNT(od.serial_number) AS orderNum
        FROM
          sl_order_detail od
           sl_order o
        LEFT JOIN sl_user u
        ON o.user_id = u.id
        WHERE product_id = #{goodsId}
        AND o.payment_state = 1
        GROUP BY od.serial_number HAVING COUNT(od.serial_number) &lt; #{peopleNum}
    </select>
        <!--查询该订单第一个发起人-->
    <select id="findGroupPeople" resultType="Map" parameterType="String">
        SELECT
         u.avatar,u.nick_name
        FROM sl_order o
        LEFT JOIN sl_user u
        ON o.user_id = u.id
        WHERE  o.serial_number = #{orderNum} and o.payment_state = 1
        ORDER BY o.create_time ASC
        LIMIT 0,1
    </select>
    <!--热门推荐-->
    <select id="hotGoods" parameterType="String" resultType="Map">
        SELECT
          *
        FROM
          sl_product p
        WHERE p.`sales_mode_id` = #{saleModeId}
          AND p.id != #{goodsId}
    </select>

</mapper>

















