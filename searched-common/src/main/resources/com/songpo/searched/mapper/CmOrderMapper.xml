<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.songpo.searched.mapper.CmOrderMapper">

    <select id="findList" parameterType="String" resultType="java.util.Map">
        select
        ss.name shopName,
        spr.product_name productName,
        spr.product_detail_group_name groupName,
        sp.image_url goodImageUrl,
        sod.quantity counts,
        so.payment_state paymentState,
        sod.shipping_state shippingState,
        sod.price price,
        sod.deduct_total_silver pulse,
        sod.post_fee postFee,
        ss.image_url shopImageUrl,
        sp.sales_mode_id salesModeId,
        so.id orderId,
        sod.id orderDetailId,
        spr.ship ship,
        so.type type,
        so.serial_number serialNumber,
        so.total_amount totalAmount,
        so.deduct_total_pulse deductTotalPulse,
        sod.buyer_message buyerMessage,
        ss.phone shopPhone,
        sod.ems_id emsId,
        sod.ship_number shipNumber
        from sl_order_detail sod
        LEFT JOIN sl_order so ON so.id = sod.order_id
        LEFT JOIN sl_product sp ON sod.product_id = sp.id
        LEFT JOIN sl_shop ss ON sod.shop_id = ss.id
        LEFT JOIN sl_product_repository spr ON sod.repository_id = spr.id
        LEFT JOIN sl_sales_mode ssm ON ssm.id = sp.sales_mode_id
        WHERE sod.creator = #{userId} and so.status = 1 AND so.user_id = #{userId}
        and so.type in (1,4,5,6)
        and sod.shipping_state != 7
        <if test="status != null">
            <if test="status == 2">
                and so.payment_state = 2
            </if>
            <if test="status != 2">
                and sod.shipping_state = #{status}
            </if>
        </if>
        ORDER BY so.create_time DESC
    </select>

    <select id="findUserAvatar" resultType="java.lang.String">
        select
        su.avatar avatar
        from sl_user su
        LEFT JOIN sl_order so ON su.id = so.user_id
        WHERE so.payment_state = '1' AND so.serial_number = #{serialNumber}
        limit 10
    </select>

    <select id="selectMyOrderInfo" resultType="java.util.Map">
        select
        so.consigneeName consigneeName,
        so.consigneePhone consigneePhone,
        so.province province,
        sod.activity_product_id activityProductId,
        sod.group_people groupPeople,
        so.city city,
        so.county county,
        so.detailed detailed,
        so.create_time createTime,
        so.total_amount totalAmount,
        so.deduct_total_pulse totalPulse,
        so.serial_number orderNum,
        so.type type,
        sa.name activityName,
        sod.place_order_return_pulse placeOrderReturnPulse,
        ifnull(so.payment_channel,0) paymentChannel,
        su.username owner,
        ss.id shopId,
        ss.name shopName,
        sod.product_name productName,
        sod.product_id productId,
        sod.price price,
        sod.quantity quantity,
        sod.product_image_url productImageUrl,
        ss.image_url shopImageUrl,
        sod.post_fee postFee,
        ss.phone shopPhone,
        so.payment_state paymentState,
        sod.shipping_state shippingState,
        sod.ems_id emsId,
        sod.ship_number shipNumber
        from sl_order so
        LEFT JOIN sl_order_detail sod on so.id = sod.order_id AND so.serial_number = sod.serial_number
        LEFT JOIN sl_activity_product sap ON sap.id = sod.activity_product_id
        LEFT JOIN sl_activity sa ON sa.id = sap.activity_id
        left join sl_shop ss on ss.id = sod.shop_id
        left join sl_user su on su.id = ss.owner_id
        WHERE so.user_id = #{userId} and sod.id = #{id}
    </select>

    <!--<select id="findActivityProduct" resultType="java.util.Map">-->
        <!--select-->
        <!--ifnull(sap.count,'') counts,-->
        <!--ifnull(sap.people_num,'') peopleNum,-->
        <!--sap.id activityProductId,-->
        <!--ifnull(sap.begin_time,'') beginTime,-->
        <!--ifnull(sap.end_time,'') endTime,-->
        <!--ifnull(sap.orders_num,'')ordersNum,-->
        <!--ifnull(sap.surplus_product_count,'') surplusProductCount-->
        <!--from sl_activity_product sap-->
        <!--LEFT JOIN sl_activity sa ON sap.activity_id = sa.id-->
        <!--WHERE-->
        <!--sap.product_id = #{productId}-->
        <!--and-->
        <!--now() &lt; sap.end_time-->
        <!--order by sap.begin_time DESC-->
        <!--limit 1-->
    <!--</select>-->
    <select id="selectOrdersCount" resultType="java.lang.Integer">
        select
        ifnull(sum(sod.quantity),0) quantity
        from sl_order so
        LEFT JOIN sl_order_detail sod ON so.id = sod.order_id
        AND so.serial_number = sod.serial_number
        WHERE so.payment_state &lt; 100
        AND sod.product_id = #{productId} and sod.creator = #{userId}
        and so.user_id = #{userId}
        and sod.activity_product_id = #{activityProductId}
    </select>
    <!--<select id="findProductsRepositoryId" resultType="java.lang.String">-->
        <!--SELECT sapr.`product_repository_id`-->
        <!--FROM sl_activity_product_repository sapr-->
        <!--LEFT JOIN sl_activity_product sap ON sap.`activity_product_repository_serial_number` = sapr.`serial_number`-->
        <!--LEFT JOIN sl_product sp ON sap.`serial_number` = sp.`activity_product_serial_number`-->
        <!--WHERE-->
        <!--sp.`id` = #{productId}-->
        <!--AND sap.`activity_id` = #{activityId};-->
    <!--</select>-->

    <!--<select id="groupOrdersByUser" resultType="java.lang.Integer">-->
        <!--SELECT IFNULL(SUM(sod.`quantity`),0) FROM sl_order_detail sod-->
        <!--LEFT JOIN sl_order so ON sod.`order_id` = so.`id` AND sod.`serial_number` = so.`serial_number`-->
        <!--WHERE-->
        <!--so.type = '2' AND sod.`product_id` = #{productId}-->
        <!--and so.payment_state &lt; 100 AND sod.activity_product_id = #{activityId}-->
        <!--and sod.creator = #{userId}-->
        <!--AND so.`user_id` = #{userId}-->
    <!--</select>-->
    <select id="selectActivityProductByRepositoryId"
            resultType="com.songpo.searched.entity.SlActivityProduct">
        SELECT
        sap.id id,
        sap.orders_num ordersNum,
        sap.restrict_count restrictCount,
        sap.end_time endTime ,
        sap.orders_num ordersNum,
        sap.restrict_count restrictCount,
        sap.count AS count,
        sap.activity_id activityId,
        sap.people_num peopleNum
        FROM sl_activity_product sap
        LEFT JOIN sl_activity_product_repository sapr ON sap.`activity_product_repository_serial_number` = sapr.`serial_number`
        LEFT JOIN sl_product_repository spr ON spr.id = sapr.`product_repository_id`
        WHERE sap.enabled = TRUE AND spr.`id`= #{repositoryId} and sap.id = #{activityProductId}
    </select>
    <select id="selectShopUserName" resultType="java.util.Map">
        select
        su.username userName,
          ss.name shopName
         from sl_user su
        left join sl_shop ss on ss.owner_id = su.id
        where ss.id = #{shopId}
    </select>

    <select id="selectReturnsDetail" resultType="com.songpo.searched.entity.SlReturnsDetail">
        select
        srd.id id,
        srd.returned_status returnedStatus,
        srd.create_time createTime,
        srd.order_id orderId,
        srd.presell_returned_record_id presellReturnedRecordId,
        srd.return_money returnMoney,
        srd.return_time returnTime,
        srd.user_id userId
        from sl_returns_detail srd
        WHERE srd.`user_id` = #{userId}
        <if test="status != null and status != 2">
            and srd.returned_status = #{status}
        </if>
        and srd.`confirm_receipt` = false
        and srd.completed = false
        GROUP BY srd.`order_id`
        order by srd.`return_time` ASC
    </select>

</mapper>