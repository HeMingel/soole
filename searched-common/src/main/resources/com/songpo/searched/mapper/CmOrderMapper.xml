<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.songpo.searched.mapper.CmOrderMapper">

    <resultMap id="SlOrderDetailResultMap" type="com.songpo.searched.entity.SlOrderDetail">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="order_id" jdbcType="VARCHAR" property="orderId" />
        <result column="serial_number" jdbcType="VARCHAR" property="serialNumber" />
        <result column="shop_id" jdbcType="VARCHAR" property="shopId" />
        <result column="repository_id" jdbcType="VARCHAR" property="repositoryId" />
        <result column="product_id" jdbcType="VARCHAR" property="productId" />
        <result column="product_name" jdbcType="VARCHAR" property="productName" />
        <result column="product_image_url" jdbcType="VARCHAR" property="productImageUrl" />
        <result column="product_detail_group_name" jdbcType="VARCHAR" property="productDetailGroupName" />
        <result column="shipping_state" jdbcType="INTEGER" property="shippingState" />
        <result column="quantity" jdbcType="INTEGER" property="quantity" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="deduct_total_silver" jdbcType="INTEGER" property="deductTotalSilver" />
        <result column="confirm_receipt_time" jdbcType="VARCHAR" property="confirmReceiptTime" />
        <result column="creator" jdbcType="VARCHAR" property="creator" />
        <result column="create_time" jdbcType="VARCHAR" property="createTime" />
        <result column="post_fee" jdbcType="DECIMAL" property="postFee" />
        <result column="buyer_message" jdbcType="VARCHAR" property="buyerMessage" />
        <result column="shipping_time" jdbcType="VARCHAR" property="shippingTime" />
        <result column="ems_id" jdbcType="VARCHAR" property="emsId" />
        <result column="ship_number" jdbcType="VARCHAR" property="shipNumber" />
        <result column="group_people" jdbcType="INTEGER" property="groupPeople" />
        <result column="presell_shipments_days" jdbcType="INTEGER" property="presellShipmentsDays" />
        <result column="return_cash_money" jdbcType="DECIMAL" property="returnCashMoney" />
        <result column="place_order_return_pulse" jdbcType="INTEGER" property="placeOrderReturnPulse" />
        <result column="rewards_money" jdbcType="DECIMAL" property="rewardsMoney" />
        <result column="share_of_people_id" jdbcType="VARCHAR" property="shareOfPeopleId" />
        <result column="activity_product_id" jdbcType="VARCHAR" property="activityProductId" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="confirm" jdbcType="INTEGER" property="confirm" />
        <result column="confirm_date" jdbcType="VARCHAR" property="confirmDate" />
        <result column="check_state" jdbcType="TINYINT" property="checkState" />
        <result column="check_name" jdbcType="VARCHAR" property="checkName" />
        <result column="modifier" jdbcType="VARCHAR" property="modifier" />
        <result column="modification_time" jdbcType="VARCHAR" property="modificationTime" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="discount" jdbcType="INTEGER" property="discount" />
        <result column="rebate_pulse" jdbcType="INTEGER" property="rebatePulse" />
        <result column="return_cash_pulse" jdbcType="INTEGER" property="returnCashPulse" />
        <result column="deduct_total_gold" jdbcType="INTEGER" property="deductTotalGold" />
        <result column="is_virtual_spell_group" jdbcType="TINYINT" property="isVirtualSpellGroup" />
        <result column="inviter_id" jdbcType="INTEGER" property="inviterId" />
        <result column="is_delayed" jdbcType="INTEGER" property="isDelayed" />
    </resultMap>
    <select id="findList" parameterType="String" resultType="java.util.Map">
        select
        ss.name shopName,
        spr.product_name productName,
        spr.product_detail_group_name groupName,
        sp.image_url goodImageUrl,
        sp.id productId,
        sod.quantity quantity,
        so.payment_state paymentState,
        sod.shipping_state shippingState,
        sod.price price,
        sod.deduct_total_silver pulse,
        sod.post_fee postFee,
        ss.image_url shopImageUrl,
        sp.sales_mode_id salesModeId,
        so.id orderId,
        sod.id orderDetailId,
        spr.ship ship,
        sod.type type,
        so.serial_number serialNumber,
        so.total_amount totalAmount,
        so.deduct_total_pulse deductTotalPulse,
        sod.buyer_message buyerMessage,
        ss.phone shopPhone,
        sod.ems_id emsId,
        sod.ship_number shipNumber,
        sod.is_delayed isDelayed,
        sap.activity_id activityId
        from sl_order_detail sod
        LEFT JOIN sl_order so ON so.id = sod.order_id
        LEFT JOIN sl_product sp ON sod.product_id = sp.id
        LEFT JOIN sl_shop ss ON sod.shop_id = ss.id
        LEFT JOIN sl_product_repository spr ON sod.repository_id = spr.id
        LEFT JOIN sl_sales_mode ssm ON ssm.id = sp.sales_mode_id
        LEFT JOIN sl_activity_product sap ON sap.id = sod.activity_product_id
        WHERE sod.creator = #{userId} and so.status = 1 AND so.user_id = #{userId}
        and sod.type in (1,4,5,6,7,9)
        and so.payment_state != 101
        and sod.shipping_state != 7
        <if test="status != null">
            <if test="status == 2">
                and so.payment_state = 2
            </if>
            <if test="status != 2">
                and sod.shipping_state = #{status}
            </if>
        </if>
        ORDER BY so.create_time DESC
    </select>

    <select id="findUserAvatar" resultType="java.lang.String">
        select
        su.avatar avatar
        from sl_user su
        LEFT JOIN sl_order so ON su.id = so.user_id
        WHERE so.payment_state = '1'  AND so.status = 1  AND so.serial_number = #{serialNumber}
        limit 10
    </select>

    <select id="selectMyOrderInfo" resultType="java.util.Map">
        select
        so.consigneeName consigneeName,
        so.consigneePhone consigneePhone,
        so.province province,
        sod.activity_product_id activityProductId,
        sod.group_people groupPeople,
        so.city city,
        so.county county,
        so.detailed detailed,
        so.create_time createTime,
        so.total_amount totalAmount,
        so.deduct_total_pulse totalPulse,
        so.serial_number orderNum,
        sod.type type,
        sa.name activityName,
        sod.place_order_return_pulse placeOrderReturnPulse,
        ifnull(so.payment_channel,0) paymentChannel,
        sb.name paymentName,
        su.username owner,
        ss.id shopId,
        ss.name shopName,
        sod.product_name productName,
        sod.product_id productId,
        sod.price price,
        sod.quantity quantity,
        sod.product_image_url productImageUrl,
        ss.image_url shopImageUrl,
        sod.post_fee postFee,
        ss.phone shopPhone,
        so.payment_state paymentState,
        sod.shipping_state shippingState,
        sod.ems_id emsId,
        sod.ship_number shipNumber,
        sod.deduct_total_silver pulse,
        sod.is_delayed isDelayed,
        sa.id activityId,
        sp.sales_mode_id salesModeId,
        sod.inviter_id inviterId
        from sl_order so
        LEFT JOIN sl_order_detail sod on so.id = sod.order_id AND so.serial_number = sod.serial_number
        LEFT JOIN sl_activity_product sap ON sap.id = sod.activity_product_id
        left join sl_product sp on sp.id = sap.product_id
        LEFT JOIN sl_activity sa ON sa.id = sap.activity_id
        left join sl_shop ss on ss.id = sod.shop_id
        left join sl_user su on su.id = ss.owner_id
        LEFT JOIN sl_base_payment sb ON so.payment_channel=sb.id
        WHERE  so.status = 1 AND so.user_id = #{userId} and sod.id = #{id}
    </select>

    <!--<select id="findActivityProduct" resultType="java.util.Map">-->
    <!--select-->
    <!--ifnull(sap.count,'') counts,-->
    <!--ifnull(sap.people_num,'') peopleNum,-->
    <!--sap.id activityProductId,-->
    <!--ifnull(sap.begin_time,'') beginTime,-->
    <!--ifnull(sap.end_time,'') endTime,-->
    <!--ifnull(sap.orders_num,'')ordersNum,-->
    <!--ifnull(sap.surplus_product_count,'') surplusProductCount-->
    <!--from sl_activity_product sap-->
    <!--LEFT JOIN sl_activity sa ON sap.activity_id = sa.id-->
    <!--WHERE-->
    <!--sap.product_id = #{productId}-->
    <!--and-->
    <!--now() &lt; sap.end_time-->
    <!--order by sap.begin_time DESC-->
    <!--limit 1-->
    <!--</select>-->
    <update id="reduceNumber">
        UPDATE sl_product_repository
        SET count =  #{count}
        where id = #{id} and
        count > 0
    </update>

    <select id="selectOrdersCount" resultType="java.lang.Integer">
        select
        ifnull(sum(sod.quantity),0) quantity
        from sl_order so
        LEFT JOIN sl_order_detail sod ON so.id = sod.order_id
        AND so.serial_number = sod.serial_number
        WHERE so.payment_state &lt; 100 AND so.status = 1
        AND sod.product_id = #{productId} and sod.creator = #{userId}
        and so.user_id = #{userId}
        and sod.activity_product_id = #{activityProductId}
    </select>
    <!--<select id="findProductsRepositoryId" resultType="java.lang.String">-->
    <!--SELECT sapr.`product_repository_id`-->
    <!--FROM sl_activity_product_repository sapr-->
    <!--LEFT JOIN sl_activity_product sap ON sap.`activity_product_repository_serial_number` = sapr.`serial_number`-->
    <!--LEFT JOIN sl_product sp ON sap.`serial_number` = sp.`activity_product_serial_number`-->
    <!--WHERE-->
    <!--sp.`id` = #{productId}-->
    <!--AND sap.`activity_id` = #{activityId};-->
    <!--</select>-->

    <select id="groupOrdersByUser" resultType="java.lang.Integer">
        SELECT count(*) FROM sl_order_detail sod
        LEFT JOIN sl_order so ON sod.`order_id` = so.`id` AND sod.`serial_number` = so.`serial_number`
        WHERE
        sod.type = '2' and so.payment_state = 1  AND so.status = 1 AND so.serial_number = #{serialNumber}
    </select>
    <select id="selectActivityProductByRepositoryId"
            resultType="com.songpo.searched.entity.SlActivityProduct">
        SELECT
        sap.id id,
        sap.orders_num ordersNum,
        sap.restrict_count restrictCount,
        sap.end_time endTime ,
        sap.orders_num ordersNum,
        sap.restrict_count restrictCount,
        sap.count AS count,
        sap.activity_id activityId,
        sap.people_num peopleNum
        FROM sl_activity_product sap
        LEFT JOIN sl_activity_product_repository sapr ON sap.`activity_product_repository_serial_number` = sapr.`serial_number`
        LEFT JOIN sl_product_repository spr ON spr.id = sapr.`product_repository_id`
        WHERE sap.enabled = TRUE AND spr.`id`= #{repositoryId} and sap.id = #{activityProductId}
    </select>
    <select id="selectShopUserName" resultType="java.util.Map">
        select
        su.username userName,
          ss.name shopName
         from sl_user su
        left join sl_shop ss on ss.owner_id = su.id
        where ss.id = #{shopId}
    </select>

    <select id="selectReturnsDetail" resultType="com.songpo.searched.entity.SlReturnsDetail">
        select
        srd.id id,
        srd.returned_status returnedStatus,
        srd.create_time createTime,
        srd.order_id orderId,
        srd.presell_returned_record_id presellReturnedRecordId,
        srd.return_money returnMoney,
        srd.return_time returnTime,
        srd.user_id userId
        from sl_returns_detail srd
        WHERE srd.`user_id` = #{userId}
        <if test="status != null and status != 2">
            and srd.returned_status = #{status}
        </if>
        and srd.`confirm_receipt` = false
        and srd.completed = false
        GROUP BY srd.`order_id`
        order by srd.`return_time` ASC
    </select>

    <update id="changeSlbScheduled" parameterType="com.songpo.searched.entity.SlSlbType">
        UPDATE sl_slb_type
        SET present_num = (
            CASE slb_type
            WHEN 2 THEN
                47400
            WHEN 3 THEN
                15800
            WHEN 4 THEN
                1975
            ELSE
                592.5
            END
        )
        WHERE
            slb_type IN (2, 3, 4, 5);
    </update>
    <!--查询已购买的区块链商品订单-->
    <select id="getSlbOrderDetail" resultMap="SlOrderDetailResultMap">
        SELECT
          `id`,
          `order_id`,
          `serial_number`,
          `shop_id`,
          `repository_id`,
          `product_id`,
          `product_name`,
          `product_image_url`,
          `product_detail_group_name`,
          `shipping_state`,
          `quantity`,
          `price`,
          `deduct_total_silver`,
          `confirm_receipt_time`,
          `creator`,
          `create_time`,
          `post_fee`,
          `buyer_message`,
          `shipping_time`,
          `ems_id`,
          `ship_number`,
          `group_people`,
          `presell_shipments_days`,
          `return_cash_money`,
          `place_order_return_pulse`,
          `rewards_money`,
          `share_of_people_id`,
          `activity_product_id`,
          `type`,
          `confirm`,
         `confirm_date`,
         `check_state`,
         `check_name`,
         `modifier`,
         `modification_time`,
         `created_at`,
         `updated_at`,
         `discount`,
         `rebate_pulse`,
         `return_cash_pulse`,
         `deduct_total_gold`,
         `is_virtual_spell_group`,
         `inviter_id`,
         `is_delayed`
        FROM
          `sl_order_detail`
        WHERE `type` = 4
          AND `shipping_state` &gt; 2
          <if test="compareDate == 1">
              AND `created_at` &lt; '2018-07-12 00:05:00'
          </if>
         <if test="compareDate == 2">
            AND `created_at` &gt;= '2018-07-12 00:05:00'
         </if>
    </select>
    <!-- 预售订单查询 新 -->
    <select id="selectReturnsDetailNew" resultType="java.util.Map">
        SELECT
          od.`order_id` orderId,
          od.`serial_number`,
          od.`product_image_url`,
          od.`quantity`,
          od.`post_fee`,
          od.`price`,
          od.`product_name`,
          od.`id` orderDetailId,
          od.`deduct_total_silver` pulse,
          o.`total_amount`,
          o.`payment_state`,
          o.`deduct_total_pulse`,
          od.`type`,
          ap.`activity_id` activityId,
          temp.return_time ,
          IFNULL(temp.`returned_status`, 0) 'status',
          temp.`id` returnsDetailId,
          p.name shop_name,
          pro.`sales_mode_id` salesModeId,
          pro.id productId,
          u.`username` AS 'owner'
        FROM
          sl_order_detail od
          LEFT JOIN
            (SELECT
              *
            FROM
              `sl_returns_detail`
            WHERE `confirm_receipt` = 0
              AND `completed` = 0
            GROUP BY `order_id`
            ORDER BY `updated_at` DESC) temp
            ON temp.`order_id` = od.`order_id`
          LEFT JOIN `sl_order` o
            ON o.`id` = od.`order_id`
          LEFT JOIN `sl_shop` p
            ON p.id = od.`shop_id`
          LEFT JOIN `sl_user` u
            ON p.`owner_id` = u.`id`
          LEFT JOIN `sl_activity_product` ap
            ON ap.id = od.`activity_product_id`
          LEFT JOIN `sl_product` pro
            ON pro.id = od.`product_id`
        WHERE od.`type` = 3
          AND od.`creator` = #{userId}
          <if test="status != null and status != 0">
              AND temp.`returned_status` = #{status}
          </if>

    </select>

</mapper>